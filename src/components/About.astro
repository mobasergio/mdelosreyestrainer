---
import { Target, Heart, Trophy, Zap } from 'lucide-astro';
import { Image } from 'astro:assets';

const features = [
  {
    icon: Target,
    title: "Estética y composición corporal",
    description: "Tanto si quieres ganar masa muscular como perder grasa, tendrás un entrenamiento programado y adaptado para conseguirlo.",
  },
  {
    icon: Zap,
    title: "Rendimiento deportivo",
    description: "Si tu objetivo es mejorar tus niveles de fuerza, perder el miedo a levantar kilos y aumentar tu capacidad aeróbica, tu entrenamiento se centrará en conseguir que te sientas y te veas fuerte.",
  },
  {
    icon: Trophy,
    title: "Fuerza y resistencia",
    description: "Mejorar tus niveles de fuerza máxima y compaginar los entrenamientos de fuerza con los de resistencia es posible si se estructura de manera correcta.",
  },
  {
    icon: Heart,
    title: "Salud y diversión",
    description: "Entrenar tiene que ser parte de nuestra vida para mejorar nuestra salud a nivel físico y mental. Además, tiene que ser una actividad divertida para que se mantenga como un hábito en el tiempo.",
  },
];

const trainingTypes = [
  { image: "/images/woman-doing-strength-training-with-dumbbells-in-gy.jpg", title: "Entrenamiento de fuerza" },
  { image: "/images/woman-doing-cardio-workout-running-outdoors.jpg", title: "Cardio y resistencia" },
  { image: "/images/woman-doing-yoga-and-flexibility-exercises.jpg", title: "Movilidad y bienestar físico" },
  { image: "/images/woman-doing-nutrition-meal-prep-healthy-eating.jpg", title: "Asesoramiento nutricional personalizado" },
];
---

<section id="about" class="py-24 bg-background">
  <div class="container mx-auto px-4">
    <div class="max-w-3xl mx-auto text-center mb-16 fade-in-section">
      <h2 class="text-4xl md:text-5xl font-bold mb-6 text-balance">Lo que te ofrezco</h2>
      <p class="text-lg text-muted-foreground leading-relaxed text-pretty">
        No se trata solo de entrenar, sino de descubrir lo que eres capaz de conseguir. Olvídate de rutinas genéricas o dietas imposibles. Aquí cada plan está hecho para ti, con equilibrio y constancia. Te acompaño paso a paso para que los cambios sean reales y duraderos.
      </p>
    </div>

    <div class="grid md:grid-cols-2 lg:grid-cols-4 gap-8 max-w-6xl mx-auto">
      {features.map((feature, index) => (
        <div class="text-center fade-in-section" style={`animation-delay: ${index * 0.1}s`}>
          <div class="feature-icon inline-flex items-center justify-center w-16 h-16 rounded-full bg-accent mb-4">
            <feature.icon class="w-8 h-8 text-accent-foreground" />
          </div>
          <h3 class="text-xl font-bold mb-2">{feature.title}</h3>
          <p class="text-muted-foreground leading-relaxed">{feature.description}</p>
        </div>
      ))}
    </div>

    <div class="grid md:grid-cols-2 lg:grid-cols-4 gap-6 max-w-6xl mx-auto mt-16">
      {trainingTypes.map((type, index) => (
        <div class="training-card relative h-64 rounded-lg overflow-hidden fade-in-section" style={`animation-delay: ${0.4 + index * 0.1}s`}>
          <Image
            src={type.image || "/images/testimonios/placeholder.svg"}
            alt={type.title}
            width={400}
            height={300}
            class="w-full h-full object-cover"
          />
          <div class="absolute inset-0 bg-gradient-to-t from-primary/80 to-transparent flex items-end p-6">
            <p class="text-white font-bold text-xl">{type.title}</p>
          </div>
        </div>
      ))}
    </div>
  </div>
</section>

<style>
  .fade-in-section {
    opacity: 0;
    transform: translateY(30px);
    transition: opacity 0.6s ease-out, transform 0.6s ease-out;
  }

  .fade-in-section.visible {
    opacity: 1;
    transform: translateY(0);
  }

  .feature-icon {
    transition: transform 0.6s ease;
  }

  .feature-icon:hover {
    transform: rotate(360deg) scale(1.1);
  }

  .training-card {
    transition: transform 0.3s ease;
  }

  .training-card:hover {
    transform: scale(1.05);
  }
</style>

<script>
  const observerOptions = {
    threshold: 0.1,
    rootMargin: '-100px'
  };

  const observer = new IntersectionObserver((entries) => {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        entry.target.classList.add('visible');
      }
    });
  }, observerOptions);

  document.querySelectorAll('.fade-in-section').forEach(el => {
    observer.observe(el);
  });
</script>
